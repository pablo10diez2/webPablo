<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptography on Welcome!</title>
    <link>https://pablo10diez2.github.io/webPablo/categories/cryptography/</link>
    <description>Recent content in Cryptography on Welcome!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pablo10diez2.github.io/webPablo/categories/cryptography/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Cryptography] Baby-RSA 2</title>
      <link>https://pablo10diez2.github.io/webPablo/posts/dawgctf/baby-rsa2/</link>
      <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://pablo10diez2.github.io/webPablo/posts/dawgctf/baby-rsa2/</guid>
      <description>Challenge: If all I have to do is keep my factors p and q secret, then I can save computation time by sharing the same modulus between all my friends. I&amp;rsquo;ll give them unique e and d pairs to encrypt and decrypt messages. Sounds secure to me!&#xA;For this we are given 2 files. The first one is a .py and the second one what prints.&#xA;from Crypto.Util.number import * from secret import flag # This is my stuff!</description>
    </item>
    <item>
      <title>[Cryptography] Cantors Pairadox</title>
      <link>https://pablo10diez2.github.io/webPablo/posts/dawgctf/cantorspairadox/</link>
      <pubDate>Sat, 19 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://pablo10diez2.github.io/webPablo/posts/dawgctf/cantorspairadox/</guid>
      <description>Challenge: Now that I have encrypted my flag with a new math function I was just researching I can know share it with my friend Cantor and no one will know how to read it except us!&#xA;For this we are given 2 files. The first one is a .txt containing the following:&#xA;flag = 4036872197130975885183239290191447112180924008343518098638033545 53589334888434826276681036070738374179472139222629149731482620127084778 4737584016&#xA;And the other one is a python file:&#xA;from sage.all import sqrt, floor from secret import flag def getTriNumber(n): return n * (n + 1) // 2 # Ensure integer division def pair(n1, n2): S = n1 + n2 return getTriNumber(S) + n2 def pair_array(arr): result = [] for i in range(0, len(arr), 2): result.</description>
    </item>
  </channel>
</rss>
